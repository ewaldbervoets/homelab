services:
  tailscale-traefik:
    image: tailscale/tailscale:v1.82.0
    container_name: tailscale
    hostname: traefik
    restart: unless-stopped
    environment:
      - "TS_AUTHKEY=${TS_AUTHKEY}"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    volumes:
      - ./tailscale-traefik/state:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    networks:
      - homelab
  traefik:
    image: traefik:v3.5.1
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - "TZ=${TZ}"
      - "CF_API_EMAIL=${CF_API_EMAIL}"
      - "CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}"
    depends_on:
      - tailscale-traefik
    network_mode: service:tailscale-traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Docker socket to watch for Traefik
      - traefik-certs:/certs # Docker volume to store the acme file for the Certifactes
      - ./logs:/logs
    command:
      # Tell Traefik to discover containers using the Docker API
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      # Enable the Trafik dashboard
      - "--api.dashboard=true"
      # Logs
      # - '--accesslog.filepath=/logs/access.log'
      - "--accesslog.format=json"
      # - '--log.filepath=/logs/traefik.log'
      - "--log.format=json"
      - "--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}"
      # Set up LetsEncrypt
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETS_ENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json"
      # Set up an insecure listener that redirects all traffic to TLS
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      # Set up the TLS configuration for our websecure listener
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=${SANS_DOMAIN}"
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: "Host(`traefik.${DOMAIN}`)"
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.tls.certresolver: letsencrypt
      traefik.http.routers.traefik.service: api@internal
      traefik.http.services.traefik.loadbalancer.server.port: 8080

volumes:
  traefik-certs:
    name: traefik-certs

networks:
  homelab:
    external: true
