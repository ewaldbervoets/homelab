version: "3.8"

networks:
  homelab:
    name: homelab

services:
  # Tailscale for network connectivity
  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    hostname: homelab-tailscale
    restart: unless-stopped
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_EXTRA_ARGS=--hostname=homelab --accept-dns=true
    volumes:
      - ./config/tailscale:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    networks:
      - homelab
    ports:
      - "80:80"
      - "443:443"

  # Traefik - Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    privileged: true
    environment:
      - TZ=${TZ}
    networks:
      - homelab
    depends_on:
      - tailscale
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/etc/traefik
    command:
      # Docker provider
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=homelab
      # API and Dashboard
      - --api.dashboard=true
      # Entry Points - simple HTTP configuration
      - --entrypoints.web.address=:80
      # Skip TLS verification since we're using Tailscale HTTPS
      - --serversTransport.insecureSkipVerify=true
      - --log.level=INFO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.tail16c8e5.ts.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.docker.network=homelab"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

  # Frigate - NVR
  frigate:
    image: ghcr.io/blakeblackshear/frigate:stable
    container_name: frigate
    restart: unless-stopped
    shm_size: "512mb"
    volumes:
      - ./config/frigate:/config # Config files on SSD
      - /etc/localtime:/etc/localtime:ro
      - /mnt/frigate:/media # Recordings on separate mount
      - ./data/frigate/database:/database # Database on SSD
    ports:
      - "8971:8971"
      - "5000:5000" # Internal unauthenticated access. Expose carefully.
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    devices:
      - /dev/bus/usb:/dev/bus/usb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frigate.rule=Host(`frigate.tail16c8e5.ts.net`)"
      - "traefik.http.routers.frigate.entrypoints=web"
      - "traefik.http.services.frigate.loadbalancer.server.port=5000"
      - "traefik.docker.network=homelab"

  # Portainer - Docker Management UI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.tail16c8e5.ts.net`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=homelab"
